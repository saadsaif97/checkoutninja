{%- for option in product.metafields.options -%}
  {% assign name = option[0] %}
  {% assign values = option[1] | remove: '[' | remove: ']' | remove: '"' | split: ","   %}
  <div class="product-form__input product-form__input--dropdown">
    <label class="form__label" for="option-{{ name }}">
      {{ name }}
    </label>
    <div class="select">
      <select
        id="option-{{ name }}"
        class="select__select"
        name="{{ name | escape }}"
      >
        {% for value in values %}
          <option value="{{ value }}">{{ value }}</option>
        {% endfor %}
      </select>
    </div>
  </div>
{%- endfor -%}

<hr>
<p>{{ collections[product.metafields.family.collection] }}</p>
<hr>


<script defer>
  document.querySelectorAll("select[id^='option-']").forEach(option => {
    option.addEventListener('change', (e) => {
      let selectedHandle = getSelectedHandle()
      let productId = getProductIdFromHandle(selectedHandle)
      console.log({selectedHandle, productId})
    })
  })
  
  function getSelectedHandle() {
    return Array.from(document.querySelectorAll("select[id^='option-']")).map(option => option.value).join("_")
  }
  
  function fetchProducts(query) {
    let url = `https://${window.Shopify.shop}/admin/api/2021-07/products.json`;
    const options = {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'X-Shopify-Access-Token': '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'
      }
    };

    fetch(url, options)
    .then(response => response.json())
    .then(data => {
      const products = data.products;
      const searchTerm = query;
      console.log({products})
      const productsMatchingTitle = products.filter(product => product.title.toLowerCase() === searchTerm.toLowerCase());

      console.log(productsMatchingTitle);
    })
    .catch(err => console.error('error:' + err));
  }
  
  function getProductIdFromHandle(selectedHandle) {
    let products = [
      {%- for product in collections[product.metafields.family.collection].products -%} 
        [ "{{ product.handle }}", {{ product.id }} ] {%- unless forloop.last -%},{%- endunless -%}
      {%- endfor -%}
    ];
    let foundHandle = products.find(([handle, id]) => handle == selectedHandle)
    if(!foundHandle) throw new Error(`Handle does not match: "${selectedHandle}"`)

    return foundHandle[1]
  }
</script>
